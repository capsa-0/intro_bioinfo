# Los scripts de python usados (comentados) están en 'scripts_python'(acá los llamo directamente desde la terminal). Se requiere tener biopython instalado en el entorno virtual para el análisis de datos.

mkdir blast_crudos
mkdir resultados
conda activate bioinfo

# Ejercicio 1
#**tutorial**

# El output de los siguientes comandos son tablas dentro de la carpeta 'resultados'


# Ejercicio 2

makeblastdb -dbtype prot -in datasets/proteome_N315.fas

# Elegí -outfmt 5 porque incluye las querys sin hits y los archivos .xml son fácilmente parseables con SearchIO de biopython. No pude parsear el archivo generado con el formato de salida por defecto de blastp con SearchIO. También podría usarse -outfmt "6..." y enumerar la información que queremos extraer
blastp -query datasets/VFDB_setB_pro.fas -db datasets/proteome_N315.fas -out blast_crudos/EJ2_blastp_VFDBvsN315_fmt5_cv70.xml -outfmt 5 -evalue 1e-5 -qcov_hsp_perc 70

python scripts_python/ej_2.py blast_crudos/EJ2_blastp_VFDBvsN315_fmt5_cv70.xml resultados/EJ2_blastp_VFDBvsN315_fmt5_cv70

#OUTPUT: tabla con todas las querys de VFDB_setB_pro con información sobre los hits encontrados (columnas: query, hit, cobertura de la query, cobertura del hit, identidad)


# Ejercicios 3 y 4

makeblastdb -dbtype prot -in datasets/curated_enterotoxins.fas

# A modo de ejemplo solamente se usaron como query las secuencias de proteome_N315.fas
blastp -query datasets/proteome_N315.fas -db datasets/curated_enterotoxins.fas -out blast_crudos/EJ3_blastp_N315vsENTEROT_fmt5.xml -outfmt 5 -evalue 1e-5

# Los últimos dos parámetros son los porcentajes mínimos de cobertura de la query (70) e identidad del hit (80)
python scripts_python/ej_3_4.py blast_crudos/EJ3_blastp_N315vsENTEROT_fmt5.xml resultados/EJ3_blastp_N315vsENTEROT_fmt5 70 80

#OUTPUT: tabla con todos los hits que cumplieron los criterios (columnas: query, hit, cobertura de la query, cobertura del hit, identidad, variantes)